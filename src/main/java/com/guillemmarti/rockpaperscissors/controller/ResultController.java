package com.guillemmarti.rockpaperscissors.controller;

import com.guillemmarti.rockpaperscissors.model.Decision;
import com.guillemmarti.rockpaperscissors.model.ResultResponse;
import com.guillemmarti.rockpaperscissors.service.DecisionService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@CrossOrigin(origins = "http://localhost:4200")
@RequestMapping("/api")
public class ResultController {

    private final DecisionService decisionService;

    @Autowired
    public ResultController(DecisionService decisionService) {
        this.decisionService = decisionService;
    }

    @Operation(summary = "Rock-paper-Scissors CPU decision",
            description = "Returns a rock-paper-scissors CPU decision generated by a random number")
    @ApiResponse(responseCode = "200", description = "OK")
    @ApiResponse(responseCode = "400", description = "Bad Request")
    @ApiResponse(responseCode = "500", description = "Internal Server Error")
    @GetMapping(path = "/cpuDecision", produces = "application/json")
    public ResponseEntity<Decision> getCpuDecision() {
        return ResponseEntity.ok(decisionService.getCpuDecision());
    }

    @Operation(summary = "Rock-paper-Scissors match result",
            description = "Returns a rock-paper-scissors match result against CPU")
    @ApiResponse(responseCode = "200", description = "OK")
    @ApiResponse(responseCode = "400", description = "Bad Request")
    @ApiResponse(responseCode = "500", description = "Internal Server Error")
    @GetMapping(path = "/result", produces = "application/json")
    public ResponseEntity<ResultResponse> getResult(@RequestParam Decision playerDecision) {
        return ResponseEntity.ok(decisionService.getResult(playerDecision));
    }

}
